set nocompatible              " be iMproved, required
filetype plugin indent on

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'scrooloose/nerdtree'
Plug 'mileszs/ack.vim'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'tpope/vim-commentary'
Plug 'christoomey/vim-tmux-navigator'
Plug 'rafi/awesome-vim-colorschemes'
Plug 'ntpeters/vim-better-whitespace'
Plug 'ervandew/supertab'
Plug 'honza/vim-snippets'
Plug 'SirVer/ultisnips'
Plug 'tmux-plugins/vim-tmux-focus-events'
Plug 'kana/vim-textobj-user' | Plug 'kana/vim-textobj-line'
Plug 'sheerun/vim-polyglot'
Plug 'vim-syntastic/syntastic'
Plug 'mhinz/vim-signify'
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'jeetsukumaran/vim-buffergator'
Plug 'morhetz/gruvbox'
Plug 'w0rp/ale'
Plug 'machakann/vim-highlightedyank'

call plug#end()

" Native Vim Settings "
colorscheme gruvbox
let mapleader = " "
syntax on
set number
set encoding=utf-8
set noshowmode
set termguicolors
set nohlsearch
set noincsearch
set ttimeoutlen=0
set smartcase
set smartindent
set ignorecase
set updatetime=100 " Speed things up for vim gutter
set backspace=indent,eol,start " Normal backspace
set wildmenu
set wildmode=longest:full,full
set noswapfile
set norelativenumber
set autoread
set isk+=-
set cursorline
set splitbelow
set splitright
set expandtab " Make tabs indent with spaces
set tabstop=2 " Number of spaces for tab character
set shiftwidth=2 " Width when using > in normal mode
set softtabstop=2 " Set equal to tabspot
set listchars=space:.,eol:¬,tab:>·
set complete-=i
set hidden " Allows to move between buffers while editing
set relativenumber
set scrolloff=2
set inccommand=nosplit

if has("clipboard")
  set clipboard=unnamed " copy to the system clipboard
endif

" Key Mappings "
map <C-n> :edit.<CR>

" Insert mappings
imap jj <ESC>

" Normal Mappings "
nnoremap <leader>a gUiwe
nnoremap <leader>A guiwe
nnoremap <leader>b :Buffers<CR>
    nmap <leader>c cs"'
    nmap <leader>C cs'"
nnoremap <Leader>d *``cgn
nnoremap <leader>f :Ack!<Space>
nnoremap <leader>h :set list!<CR> " Show listchars
nnoremap <leader>n :bnext<CR>
nnoremap <leader>o <C-w>o
nnoremap <leader>p :bprevious<CR>
nnoremap <leader>Q :q!<CR>
nnoremap <leader>q :q<CR>
nnoremap <leader>r :source ~/.vimrc<CR>
nnoremap <Leader>s :%s/\<<C-r><C-w>\>//gc<left><left><left>
nnoremap <leader>t :Files<CR>
nnoremap <leader>v :let @/ = ""<CR>
nnoremap <leader>w :w<CR>
nnoremap <leader>x :bp <BAR> bd #<CR>
nnoremap <leader>X :bp <BAR> bd! #<CR>
nnoremap <leader>y "0p
nnoremap <leader>z :ccl<CR>
nnoremap <Leader>/ *N
nnoremap ,f <C-w>\|
nnoremap ,s :sp<CR>
nnoremap ,v :vsp<CR>
nnoremap ,x <C-w>x
nnoremap ,= <C-w>=

" Visual mappings "
vnoremap <Leader>s "hy:%s/<C-r>h//gc<left><left><left>
vnoremap <Leader>/ y/<C-R>"<CR>N

" Plugin Settings

let g:airline_theme='gruvbox'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'
let g:NERDTreeNodeDelimiter = "\u00a0"
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif
let g:syntastic_mode_map = { 'mode': 'passive', 'active_filetypes': [],'passive_filetypes': [] }
let g:syntastic_ruby_checkers = ['rubocop']
let g:syntastic_javascript_checkers = ['eslint']
let g:signify_vcs_list = [ 'git' ]
let g:signify_realtime = 0
let g:signify_update_on_focusgained = 1
let g:signify_update_on_bufenter = 1
let g:signify_update_on_winenter = 1
let g:ale_linters = {'javascript': ['eslint'], 'ruby': ['rubocop']}

let g:buffergator_suppress_keymaps = 1

set rtp+=$GOPATH/src/golang.org/x/lint/misc/vim

let g:ale_linters = { 'javascript': ['eslint'], 'ruby': ['rubocop'] }
